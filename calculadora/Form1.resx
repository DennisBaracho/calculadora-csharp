<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>